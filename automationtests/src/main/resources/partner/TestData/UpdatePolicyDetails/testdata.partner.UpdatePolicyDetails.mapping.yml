testdata: 
  Partner_UpdatePolicyDetails_All_Valid_Smoke: 
    input.update-partner-request: 
      desc: "DESC MOSIP AUTH POLICY UPDATE"
      name: "MOSIP AUTH POLICY"
      policyGroupName: "MOSIP POLICY GROUP"
      policyID: POLICY-AUTH-ID-01
      policyType: Auth
    output.output-1-expected-pos-response: 
      Rdesc: "DESC MOSIP AUTH POLICY UPDATE"
      Rid: POLICY-AUTH-ID-01
      Rname: "MOSIP AUTH POLICY"
      RpolicyGroupName: "MOSIP POLICY GROUP"
      cr_by: $IGNORE$
      cr_dtimes: $IGNORE$
      id: $IGNORE$
      is_Active: true
      responsetime: $IGNORE$
      up_by: $IGNORE$
      upd_dtimes: $IGNORE$
      version: $IGNORE$
  Partner_UpdatePolicyDetails_With_Invalid_policyGroupName: 
    input.update-partner-request: 
      desc: "DESC MOSIP AUTH POLICY UPDATE"
      name: "MOSIP AUTH POLICY"
      policyGroupName: "MOSIP POLICY GROUP1234"
      policyID: POLICY-AUTH-ID-01
      policyType: Auth
    output.output-1-expected-error-response: 
      errorCodeerrors0: PMS_POL_019
      id: $IGNORE$
      messageerrors0: "Policy group name does not exist"
      metadata: $IGNORE$
      responsetime: $IGNORE$
      version: $IGNORE$
  Partner_UpdatePolicyDetails_With_Invalid_policyID: 
    input.update-partner-request: 
      desc: "DESC MOSIP AUTH POLICY UPDATE"
      name: "MOSIP AUTH POLICY"
      policyGroupName: "MOSIP POLICY GROUP"
      policyID: POLICY-AUTH-ID-00001
      policyType: Auth
    output.output-1-expected-error-response: 
      errorCodeerrors0: PMS_POL_008
      id: $IGNORE$
      messageerrors0: "Policy ID does not exist"
      metadata: $IGNORE$
      responsetime: $IGNORE$
      version: $IGNORE$
  Partner_UpdatePolicyDetails_With_Missing_Input_Parameter_name: 
    input.update-partner-request2: 
      desc: "DESC MOSIP AUTH POLICY UPDATE"
      policyGroupName: "MOSIP POLICY GROUP"
      policyID: POLICY-AUTH-ID-01
      policyType: Auth
    output.output-1-expected-error-response: 
      errorCodeerrors0: PMS_COR_003
      id: $IGNORE$
      messageerrors0: Could not process the request
      metadata: $IGNORE$
      responsetime: $IGNORE$
      version: $IGNORE$
